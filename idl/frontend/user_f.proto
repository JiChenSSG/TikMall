syntax = "proto3";

package frontend.user;

import "frontend/api.proto";
import "frontend/common.proto";

option go_package = "/frontend/user";

message RegisterReq {
  string email = 1 [ (api.body) = "email,required" ];
  string password = 2 [ (api.body) = "password,required" ];
  string confirm_password = 3 [ (api.body) = "confirm_password,required" ];
}

message RegisterResp {
  string message = 1;
  int64 user_id = 2;
  string token = 3;
}

message LoginReq {
  string email = 1 [ (api.body) = "email,required" ];
  string password = 2 [ (api.body) = "password,required" ];
}

message LoginResp {
  string message = 1;
  string token = 2;
}

message LogoutReq {
	string token = 1 [ (api.header) = "Authorization,required" ];
	string user_id = 2 [ (api.body) = "user_id,required" ];
}

message LogoutResp {
	string message = 1;
}

message InfoReq {
	string token = 1 [ (api.header) = "Authorization,required" ];
}

message InfoResp {
	string message = 1;
	int64 user_id = 2;
	string email = 3;
}

message DeleteReq {
	string token = 1 [ (api.header) = "Authorization,required" ];
}

message DeleteResp {
	string message = 1;
}

service AuthService {
  rpc register(RegisterReq) returns (RegisterResp) {
    option (api.post) = "/auth/register";
  }

  rpc login(LoginReq) returns (LoginReq) {
    option (api.post) = "/auth/login";
  }

  rpc logout(common.Empty) returns (common.Response) {
    option (api.post) = "/auth/logout";
  }

  rpc info(InfoReq) returns (InfoResp) {
	option (api.get) = "/auth/info";
  }

  rpc delete(DeleteReq) returns (DeleteResp) {
	option (api.delete) = "/auth/delete";
  }
}